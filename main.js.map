{"version":3,"sources":["webpack:///./dist/ngx-password-visible-input-lib/fesm5/ngx-password-visible-input-lib.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/material.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2G;AACzE;AACW;AACE;AACmB;AACiB;;AAEnF;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,wRAAwR,6CAA6C;AACrU,qCAAqC,qEAAuB;AAC5D,oCAAoC,kBAAkB,aAAa,eAAe,oBAAoB,WAAW,mBAAmB;AACpI,iBAAiB;AACjB;AACA;AACA,gEAAgE;AAChE,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,uDAAS;AACzB,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACp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","file":"main.js","sourcesContent":["import { Component, ChangeDetectionStrategy, ElementRef, Renderer2, Input, NgModule } from '@angular/core';\nimport { __extends } from 'tslib';\nimport { FieldType } from '@ngx-formly/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule, MatInputModule, MatButtonModule } from '@angular/material';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar PasswordVisibleInputComponent = /** @class */ (function () {\r\n    function PasswordVisibleInputComponent(elem, renderer) {\r\n        this.elem = elem;\r\n        this.renderer = renderer;\r\n        this.color = '';\r\n        this.raised = false;\r\n        this.mode = 'mousedown';\r\n        this.isShowing = false;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PasswordVisibleInputComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.input = this.elem.nativeElement.querySelector('input');\r\n        if (!this.input) {\r\n            throw new Error(\"No input element found.\");\r\n        }\r\n        this.renderer.setStyle(this.input, 'flex', '1');\r\n    };\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    PasswordVisibleInputComponent.prototype.toggleShowing = /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    function ($event) {\r\n        if (this.mode === 'toggle') {\r\n            this.isShowing = !this.isShowing;\r\n            this.updateInputType();\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    PasswordVisibleInputComponent.prototype.updateInputType = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.renderer.setAttribute(this.input, 'type', this.isShowing ? 'text' : 'password');\r\n    };\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    PasswordVisibleInputComponent.prototype.mousedown = /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    function ($event) {\r\n        if (this.mode === 'mousedown') {\r\n            this.isShowing = true;\r\n            this.updateInputType();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    PasswordVisibleInputComponent.prototype.mouseup = /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    function ($event) {\r\n        if (this.mode === 'mousedown') {\r\n            this.isShowing = false;\r\n            this.updateInputType();\r\n        }\r\n    };\r\n    PasswordVisibleInputComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ngx-password-visible-input',\r\n                    template: \"<ng-content></ng-content>\\n<button mat-button [color]=\\\"color\\\" [ngClass]=\\\"(raised ? 'mat-raised-button' : '' )\\\" type=\\\"button\\\" \\n  (click)=\\\"toggleShowing($event)\\\" (mousedown)=\\\"mousedown($event)\\\" (mouseup)=\\\"mouseup($event)\\\">\\n  <mat-icon>{{isShowing ? 'visibility' : 'visibility_off'}}</mat-icon>\\n</button>\",\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    styles: [\":host{position:relative;display:flex;flex-wrap:wrap;align-items:stretch;width:100%;flex-direction:row}\"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    PasswordVisibleInputComponent.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: Renderer2 }\r\n    ]; };\r\n    PasswordVisibleInputComponent.propDecorators = {\r\n        color: [{ type: Input }],\r\n        raised: [{ type: Input }],\r\n        placeholder: [{ type: Input }],\r\n        formControlName: [{ type: Input }],\r\n        mode: [{ type: Input }]\r\n    };\r\n    return PasswordVisibleInputComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar FormlyFieldPasswordVisibleInputComponent = /** @class */ (function (_super) {\r\n    __extends(FormlyFieldPasswordVisibleInputComponent, _super);\r\n    function FormlyFieldPasswordVisibleInputComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    Object.defineProperty(FormlyFieldPasswordVisibleInputComponent.prototype, \"type\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.to.type || 'text';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormlyFieldPasswordVisibleInputComponent.prototype, \"name\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.model[this.key] ? this.model[this.key].name : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    FormlyFieldPasswordVisibleInputComponent.prototype.onChanged = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        // tslint:disable-next-line: no-non-null-assertion\r\n        (/** @type {?} */ (this.field.formControl)).setValue(event.target.value);\r\n    };\r\n    FormlyFieldPasswordVisibleInputComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<ngx-password-visible-input>\\n    <input type=\\\"password\\\" matInput [placeholder]=\\\"placeholder\\\" (change)=\\\"onChanged($event)\\\">\\n</ngx-password-visible-input>\\n\",\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    styles: [\"\"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    FormlyFieldPasswordVisibleInputComponent.ctorParameters = function () { return []; };\r\n    FormlyFieldPasswordVisibleInputComponent.propDecorators = {\r\n        placeholder: [{ type: Input }]\r\n    };\r\n    return FormlyFieldPasswordVisibleInputComponent;\r\n}(FieldType));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxPasswordVisibleInputLibModule = /** @class */ (function () {\r\n    function NgxPasswordVisibleInputLibModule() {\r\n    }\r\n    NgxPasswordVisibleInputLibModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [\r\n                        PasswordVisibleInputComponent,\r\n                        FormlyFieldPasswordVisibleInputComponent\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule,\r\n                        MatIconModule,\r\n                        MatInputModule,\r\n                        MatButtonModule,\r\n                    ],\r\n                    exports: [\r\n                        PasswordVisibleInputComponent,\r\n                        FormlyFieldPasswordVisibleInputComponent\r\n                    ]\r\n                },] }\r\n    ];\r\n    return NgxPasswordVisibleInputLibModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { FormlyFieldPasswordVisibleInputComponent, NgxPasswordVisibleInputLibModule, PasswordVisibleInputComponent };\n//# sourceMappingURL=ngx-password-visible-input-lib.js.map\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    <a href=\\\"https://github.com/gerardcarbo/ngx-password-visible-input\\\">\\n      <svg style=\\\"fill: black;margin-right: 5px\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"24\\\" height=\\\"24\\\" aria-hidden=\\\"true\\\">\\n          <path fill-rule=\\\"evenodd\\\" d=\\\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\\\"></path>\\n      </svg>\\n      {{ title }} {{version}}\\n    </a>\\n  </h1>\\n  <mat-card>\\n    <mat-card-header><mat-card-title>Angular Material Ready</mat-card-title></mat-card-header>\\n      <div fxLayout fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"30px\\\">\\n      <label>Mode: </label>\\n      <mat-radio-group [matTooltip]=\\\"Mode\\\" [(ngModel)]=\\\"mode\\\">\\n        <mat-radio-button value=\\\"toggle\\\">Toggle</mat-radio-button>\\n        <mat-radio-button value=\\\"mousedown\\\">Mouse Down</mat-radio-button>\\n      </mat-radio-group>\\n    </div>\\n    <div fxLayout fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"30px\\\">\\n      <label>Color: </label>\\n      <mat-radio-group [matTooltip]=\\\"Color\\\" [(ngModel)]=\\\"color\\\">\\n        <mat-radio-button value=\\\"\\\">(None)</mat-radio-button>\\n        <mat-radio-button value=\\\"primary\\\">primary</mat-radio-button>\\n        <mat-radio-button value=\\\"accent\\\">accent</mat-radio-button>\\n        <mat-radio-button value=\\\"warn\\\">warn</mat-radio-button>\\n      </mat-radio-group>\\n    </div>\\n    <mat-checkbox [matTooltip]=\\\"Raised\\\" [(ngModel)]=\\\"raised\\\">Raised</mat-checkbox>\\n    <ngx-password-visible-input [mode]=\\\"mode\\\" [color]=\\\"color\\\" [raised]=\\\"raised\\\" >\\n      <input  type=\\\"password\\\" placeholder=\\\"Insert password\\\" [(ngModel)]=\\\"pwd\\\" />\\n    </ngx-password-visible-input>\\n  </mat-card>\\n  <mat-card>\\n    <mat-card-header><mat-card-title>Formly support!</mat-card-title></mat-card-header>\\n      <form [formGroup]=\\\"formlyForm\\\">\\n          <mat-dialog-content>\\n            <formly-form [form]=\\\"formlyForm\\\" [fields]=\\\"formlyFields\\\" [model]=\\\"formlyModel\\\">\\n            </formly-form>\\n          </mat-dialog-content>\\n          <mat-dialog-actions>\\n            <button fxFlex type=\\\"submit\\\" mat-raised-button class=\\\"mat-primary\\\" (click)=\\\"save()\\\" >Login</button>\\n          </mat-dialog-actions>\\n        </form>\\n  </mat-card>\\n</div>\"","module.exports = \":host {\\n  margin: 5px;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\na {\\n  color: black;\\n  text-decoration: none;\\n  font-weight: 400;\\n  background-color: transparent;\\n  outline: none;\\n}\\n\\nmat-card {\\n  display: flex;\\n  flex-direction: column;\\n  max-width: 500px;\\n  margin: auto;\\n  margin-bottom: 10px;\\n}\\n\\nmat-card mat-radio-group,\\nmat-card mat-checkbox,\\nmat-card mat-radio-button {\\n  margin: 5px;\\n}\\n\\nngx-password-visible-input {\\n  max-width: 300px;\\n  margin: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvRTpcXGFydFxcY29kZVxcbmd4LXBhc3N3b3JkLXZpc2libGUtaW5wdXQvc3JjXFxhcHBcXGFwcC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLHlDQUFBO0FDQ0Y7O0FERUE7RUFDRSxZQUFBO0VBQ0EscUJBQUE7RUFDQSxnQkFBQTtFQUNBLDZCQUFBO0VBQ0EsYUFBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0VBQ0EsbUJBQUE7QUNDRjs7QURDRTs7O0VBR0UsV0FBQTtBQ0NKOztBREdBO0VBQ0UsZ0JBQUE7RUFDQSxZQUFBO0FDQUYiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgbWFyZ2luOiA1cHg7XHJcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbmEge1xyXG4gIGNvbG9yOiBibGFjaztcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICBvdXRsaW5lOiBub25lO1xyXG59XHJcblxyXG5tYXQtY2FyZCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIG1heC13aWR0aDogNTAwcHg7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcblxyXG4gIG1hdC1yYWRpby1ncm91cCxcclxuICBtYXQtY2hlY2tib3gsXHJcbiAgbWF0LXJhZGlvLWJ1dHRvbiB7XHJcbiAgICBtYXJnaW46IDVweDtcclxuICB9XHJcbn1cclxuXHJcbm5neC1wYXNzd29yZC12aXNpYmxlLWlucHV0IHtcclxuICBtYXgtd2lkdGg6IDMwMHB4O1xyXG4gIG1hcmdpbjogYXV0bztcclxufVxyXG5cclxuXHJcbiIsIjpob3N0IHtcbiAgbWFyZ2luOiA1cHg7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xufVxuXG5hIHtcbiAgY29sb3I6IGJsYWNrO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBvdXRsaW5lOiBub25lO1xufVxuXG5tYXQtY2FyZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1heC13aWR0aDogNTAwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cbm1hdC1jYXJkIG1hdC1yYWRpby1ncm91cCxcbm1hdC1jYXJkIG1hdC1jaGVja2JveCxcbm1hdC1jYXJkIG1hdC1yYWRpby1idXR0b24ge1xuICBtYXJnaW46IDVweDtcbn1cblxubmd4LXBhc3N3b3JkLXZpc2libGUtaW5wdXQge1xuICBtYXgtd2lkdGg6IDMwMHB4O1xuICBtYXJnaW46IGF1dG87XG59Il19 */\"","import { Component } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { FormGroup } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public version: string = environment.VERSION;\n  \n  title = 'ngx-password-visible-input';\n  mode = 'mousedown';\n  color = 'primary';\n  raised = true;\n  pwd = 'ThisIsAPassword!';\n\n  // formly data\n  formlyForm = new FormGroup({});\n  formlyFields: FormlyFieldConfig[] = [\n    {\n      key: 'user',\n      type: 'input',\n      templateOptions: {\n        placeholder: 'User',\n        required: true\n      }\n    },\n    {\n      key: 'password',\n      type: 'visiblePassword',\n      templateOptions: {\n        placeholder: 'Password',\n        required: true\n      }\n    }\n  ];\n  formlyModel = {\n    user: '',\n    password: ''\n  };\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NgxPasswordVisibleInputLibModule } from 'ngx-password-visible-input-lib';\nimport { MatIconModule, MatInputModule, MatButtonModule, MatCommonModule, MatRadioModule } from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from './material.module';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyFieldPasswordVisibleInputComponent } from 'ngx-password-visible-input-lib';\nimport { FormlyMaterialModule } from '@ngx-formly/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    MaterialModule,\n    NgxPasswordVisibleInputLibModule,\n    FormlyModule.forRoot({\n      types: [\n        { name: 'visiblePassword', component: FormlyFieldPasswordVisibleInputComponent, wrappers: ['form-field'] }\n      ],\n    }),\n    FormlyMaterialModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/*\n * This module imports and re-exports all Angular Material modules for convenience,\n * so only 1 module import is needed in your feature modules.\n * See https://material.angular.io/guide/getting-started#step-3-import-the-component-modules.\n *\n * To optimize your production builds, you should only import the components used in your app.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatCommonModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatLineModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatOptionModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatPseudoCheckboxModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n} from '@angular/material';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatCommonModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatLineModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatOptionModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatPseudoCheckboxModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n  ]\n})\nexport class MaterialModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  VERSION: require('../../package.json').version\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}